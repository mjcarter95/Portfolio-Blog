---
import BaseLayout from "@/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import { slugifyTag } from "@/utils/tags";

export async function getStaticPaths({ paginate }) {
  const all = (await getCollection("case-studies"))
    .filter(p => !p.data.draft)
    .sort((a,b) => b.data.date.getTime() - a.data.date.getTime());
  return paginate(all, { pageSize: 6 }); // no params
}

const { page } = Astro.props;
const studies = page.data;
---

<BaseLayout title="Case Studies — Matthew Carter">
  <section class="max-w-6xl mx-auto px-6 py-12">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6">
      <h1 class="text-3xl font-bold border-b-4 border-black pb-4 mb-6 inline-block">
        Case Studies
      </h1>

      <input
        id="study-search"
        type="search"
        placeholder="Search title, summary, tags…"
        class="w-full sm:w-80 rounded-md border border-gray-300 px-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-[#996633]"
      />
    </div>

    <div id="study-list" class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
      {studies.map(({ slug, data }) => {
        const searchText = [data.title, data.summary ?? "", ...(data.tags ?? [])]
          .join(" ")
          .toLowerCase();

        return (
          <article
            data-search={searchText}
            class="rounded-lg border border-gray-200 overflow-hidden shadow-sm hover:shadow transition bg-white"
          >
            {data.heroImage && (
              <a href={`/case-studies/${slug}/`}>
                <img src={data.heroImage} alt={data.title} class="w-full h-40 object-cover" loading="lazy" />
              </a>
            )}
            <div class="p-4">
              <h2 class="text-lg font-semibold">
                <a href={`/case-studies/${slug}/`} class="hover:text-[#996633] transition">
                  {data.title}
                </a>
              </h2>
              <div class="mt-1 text-sm text-gray-500">
                {data.date.toLocaleDateString("en-GB", { year: "numeric", month: "long", day: "2-digit" })}
              </div>
              {data.summary && <p class="mt-2 text-sm text-gray-700 line-clamp-3">{data.summary}</p>}
              {data.tags?.length > 0 && (
                <div class="mt-3 flex gap-2 flex-wrap">
                  {data.tags.slice(0,3).map((t) => (
                    <a href={`/case-studies/tags/${slugifyTag(t)}/`} class="px-2 py-0.5 bg-gray-100 rounded text-xs hover:bg-[#996633] hover:text-white transition">
                      {t}
                    </a>
                  ))}
                </div>
              )}
            </div>
          </article>
        );
      })}
    </div>

    <p id="no-results" class="hidden text-gray-500 mt-8">No case studies match your search.</p>

    <!-- Pagination -->
    <nav class="mt-12 mb-8 pt-6 border-t border-gray-200 flex items-center justify-center gap-2 text-sm">
      {page.url.first ? (
        <a href={page.url.first} class="px-3 py-1 border rounded bg-white text-gray-700 border-gray-300 hover:bg-gray-100">« First</a>
      ) : (
        <span class="px-3 py-1 border rounded bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed">« First</span>
      )}
      {page.url.prev ? (
        <a href={page.url.prev} class="px-3 py-1 border rounded bg-white text-gray-700 border-gray-300 hover:bg-gray-100">‹ Prev</a>
      ) : (
        <span class="px-3 py-1 border rounded bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed">‹ Prev</span>
      )}

      {Array.from({ length: page.lastPage }).map((_, i) => {
        const n = i + 1;
        const href = i === 0 ? (page.url.first ?? "/case-studies/") : `/case-studies/${n}/`;
        const isCurrent = n === page.currentPage;
        return (
          <a
            href={href}
            aria-current={isCurrent ? "page" : undefined}
            class={`px-3 py-1 border rounded ${
              isCurrent ? "bg-gray-700 text-white border-gray-700"
                        : "bg-white text-gray-700 border-gray-300 hover:bg-gray-100"
            }`}
          >
            {n}
          </a>
        );
      })}

      {page.url.next ? (
        <a href={page.url.next} class="px-3 py-1 border rounded bg-white text-gray-700 border-gray-300 hover:bg-gray-100">Next ›</a>
      ) : (
        <span class="px-3 py-1 border rounded bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed">Next ›</span>
      )}
      {page.url.last ? (
        <a href={page.url.last} class="px-3 py-1 border rounded bg-white text-gray-700 border-gray-300 hover:bg-gray-100">Last »</a>
      ) : (
        <span class="px-3 py-1 border rounded bg-gray-100 text-gray-400 border-gray-200 cursor-not-allowed">Last »</span>
      )}
    </nav>
  </section>

  <script>
    const input = document.getElementById('study-search');
    const list = document.getElementById('study-list');
    const empty = document.getElementById('no-results');
    function filter() {
      const q = (input.value || '').toLowerCase().trim();
      let visible = 0;
      for (const item of list.children) {
        const hay = item.getAttribute('data-search') || '';
        const show = hay.includes(q);
        item.style.display = show ? '' : 'none';
        if (show) visible++;
      }
      empty.classList.toggle('hidden', visible !== 0);
    }
    input.addEventListener('input', filter);
  </script>
</BaseLayout>
