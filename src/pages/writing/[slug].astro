---
import BaseLayout from "@/layouts/BaseLayout.astro";
import HeroHeader from "@/components/HeroHeader.astro";
import { getCollection } from "astro:content";
import { slugifyTag } from "@/utils/tags";
import readingTime from "reading-time";

export async function getStaticPaths() {
  const posts = await getCollection("writing");
  return posts.map((p) => ({
    params: { slug: p.slug },
    props: { post: p, allPosts: posts },
  }));
}

const { post, allPosts } = Astro.props;
const { Content } = await post.render();

// === Reading time ===
const rt = readingTime(post.body ?? "");
const readMinutes = Math.max(1, Math.round(rt.minutes));

// === Series-aware prev/next logic ===
const seriesSlug = post.data.series?.trim();  // strip any accidental whitespace
const isInSeries = !!seriesSlug;

const sorted = isInSeries
  ? allPosts
      .filter((p) => p.data.series?.trim() === seriesSlug && !p.data.draft)
      .sort((a, b) => (a.data.series_order ?? 0) - (b.data.series_order ?? 0))
  : allPosts
      .filter((p) => !p.data.draft)
      .sort((a, b) => b.data.date.getTime() - a.data.date.getTime());

const index = sorted.findIndex((p) => p.slug === post.slug);
const prev = sorted[index - 1] ?? null;
const next = sorted[index + 1] ?? null;

// === SEO metadata ===
const seoTitle = `${post.data.title} — Writing`;
const seoDescription =
  post.data.summary ??
  post.data.description ??
  "Article by Matthew Carter on AI, Bayesian inference, and high-performance computing.";
const seoImage = post.data.cover ?? "/images/seo/default-og.jpg";
const canonical =
  typeof Astro.site === "string"
    ? new URL(`/writing/${post.slug}/`, Astro.site).toString()
    : undefined;

// === Hero banner image ===
const banner = post.data.banner?.trim() || "/images/spotlight/forest_ground.jpg";
---

<BaseLayout title={seoTitle} description={seoDescription} image={seoImage} canonical={canonical}>
  <HeroHeader
    title={post.data.title}
    subtitle={post.data.summary}
    backgroundImage={banner}
    date={post.data.date}
    readTime={readMinutes}
    tags={post.data.tags}
    series={post.data.series}
    series_order={post.data.series_order}
  />

  <section class="max-w-3xl mx-auto px-6 py-12">
    <div class="mb-6">
      <a href="/writing" class="text-sm font-medium underline underline-offset-4 hover:text-[#996633]">
        ← Back to Writing
      </a>
    </div>

    <!-- Optional: In-body cover image -->
    {post.data.cover && (
      <figure class="mb-8">
        <img
          src={post.data.cover}
          alt={post.data.coverAlt ?? ""}
          class="w-full rounded-xl shadow-sm"
          loading="lazy"
          decoding="async"
        />
        {post.data.coverCaption && (
          <figcaption class="mt-2 text-sm text-gray-500">
            {post.data.coverCaption}
          </figcaption>
        )}
      </figure>
    )}

    <!-- Main post content -->
    <article class="prose prose-lg prose-neutral max-w-none">
      <Content />
    </article>

    <!-- Prev / Next navigation -->
    <nav class="mt-12 pt-6 border-t border-gray-200 flex justify-between text-sm">
      {prev ? (
        <a
          href={`/writing/${prev.slug}/`}
          class="hover:underline"
          aria-label={`Previous: ${prev.data.title}`}
        >
          ← {prev.data.title}
        </a>
      ) : (
        <span></span>
      )}
      {next && (
        <a
          href={`/writing/${next.slug}/`}
          class="hover:underline"
          aria-label={`Next: ${next.data.title}`}
        >
          {next.data.title} →
        </a>
      )}
    </nav>
  </section>
</BaseLayout>
