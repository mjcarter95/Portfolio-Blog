---
const { variant = "overlay", ...rest } = Astro.props; // overlay | solid

const links = [
  { href: '/', label: 'Home' },
  { href: '/about', label: 'About' },
  { href: '/publications', label: 'Publications' },
  { href: '/code', label: 'Code' },
  { href: '/writing', label: 'Writing' },
  { href: '/photography', label: 'Photography' },
  { href: '/contact', label: 'Contact' },
];
const path = Astro.url.pathname;
const isActive = (href) => href === '/' ? path === '/' : (path === href || path.startsWith(href + '/'));
---

<header id="main-header" data-variant={variant} class="fixed top-0 left-0 right-0 z-[9999]" {...rest}>
  <a href="/" class="flex items-center gap-3">
    <img id="header-logo" src="/images/seo/logo_white.png" alt="Logo" class="h-12 w-auto" />
  </a>

  <nav class="hidden md:flex items-center gap-6 text-sm">
    {links.map(l => (
      <a href={l.href} aria-current={isActive(l.href) ? 'page' : undefined} class="nav-link font-bold relative pb-2">
        {l.label}
      </a>
    ))}
  </nav>

  <details class="md:hidden">
    <summary class="cursor-pointer select-none">Menu</summary>
    <div class="mt-2 flex flex-col gap-2">
      {links.map(l => <a href={l.href} class="py-1">{l.label}</a>)}
    </div>
  </details>
</header>

<style>
  /* Use CSS var instead of hard-coded white so we can switch themes */
  #main-header{
    --nav-fg: #fff;
    padding: 2rem 1.5rem;
    color: var(--nav-fg);
    display:flex; align-items:center; justify-content:space-between;
    transition: background .25s, padding .25s, color .25s, border-color .25s;
  }

  /* underline */
  .nav-link::after{
    content:""; position:absolute; left:0; bottom:0; height:2px; width:100%;
    background-color: transparent; opacity:0; transition: opacity .2s, background-color .2s;
  }
  .nav-link[aria-current="page"]::after{ opacity:1; background-color:#4C9141; }
  #main-header .nav-link:hover::after{ opacity:1; background-color:#4C9141; }
  .nav-link[aria-current="page"]{ color:#4C9141; }

  /* text hover */
  #main-header .nav-link:hover{ opacity:.8; }

  /* Solid (non-home) OR scrolled state => white bg, black text */
  #main-header[data-variant="solid"],
  #main-header[data-scrolled="true"]{
    --nav-fg: #111827;
    background:#fff; border-bottom:1px solid #e5e7eb;
    padding-top:1rem; padding-bottom:1rem;
  }

  /* Spacer gets height via JS */
  #header-spacer{ height:0; transition: height .25s; }
</style>

<script>
  const header = document.getElementById('main-header');
  const logo   = document.getElementById('header-logo');
  const spacer = document.getElementById('header-spacer');
  const isSolid = header.getAttribute('data-variant') === 'solid';

  function updateHeader(){
    const scrolled = window.scrollY > 60;
    const solidNow = isSolid || scrolled;
    header.setAttribute('data-scrolled', solidNow ? 'true' : 'false');
    logo.src = solidNow ? '/images/seo/logo_black.png' : '/images/seo/logo_white.png';
    if (spacer) spacer.style.height = solidNow ? `${header.getBoundingClientRect().height}px` : '0px';
  }

  document.addEventListener('scroll', updateHeader, { passive:true });
  window.addEventListener('resize', updateHeader);
  updateHeader();
</script>
